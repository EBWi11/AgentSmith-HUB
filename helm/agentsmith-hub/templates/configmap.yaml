{{- if .Values.config }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "agentsmith-hub.configVolumeName" . }}
  labels:
    {{- include "agentsmith-hub.labels" . | nindent 4 }}
data:
  config.yaml: |
    redis: {{ .Values.config.agentsmith.redis }}
    redis_password: "{{ .Values.config.agentsmith.redisPassword }}"

  frontend-config.json: |
    {
      "apiBaseUrl": "{{ .Values.config.frontend.apiBaseUrl }}",
      "apiTimeout": {{ .Values.config.frontend.apiTimeout }},
      "enableDebugMode": {{ .Values.config.frontend.enableDebugMode }},
      "enableClusterMode": {{ .Values.config.frontend.enableClusterMode }},
      "theme": "{{ .Values.config.frontend.theme }}",
      "language": "{{ .Values.config.frontend.language }}"
    }

  # Default input configuration
  input/kafka.yaml: |
    type: kafka
    kafka:
      brokers:
        - "kafka-broker:9092"
      topic: "security-events"
      group: "agentsmith-consumer"

  # Default output configuration
  output/print_demo.yaml: |
    type: print
    print:
      format: "json"

  # Default project configuration
  project/demo.yaml: |
    name: "demo-project"
    description: "Demo project for AgentSmith-HUB"
    enabled: true
  
  project/threat_detection.yaml: |
    name: "threat-detection"
    description: "Threat detection project"
    enabled: true
    input: "kafka"
    output: "print_demo"
    ruleset: "check_suspicious_ips"

  # Default ruleset configuration
  ruleset/test.xml: |
    <?xml version="1.0" encoding="UTF-8"?>
    <ruleset name="test-ruleset" description="Test ruleset">
      <rule name="test-rule" description="Test rule">
        <condition>
          <field>message</field>
          <operator>contains</operator>
          <value>test</value>
        </condition>
        <action>
          <type>print</type>
          <output>test-output</output>
        </action>
      </rule>
    </ruleset>
  
  ruleset/check_suspicious_ips.xml: |
    <?xml version="1.0" encoding="UTF-8"?>
    <ruleset name="check-suspicious-ips" description="Check for suspicious IP addresses">
      <rule name="suspicious-ip-check" description="Check if IP is suspicious">
        <condition>
          <field>source_ip</field>
          <operator>is_private_ip</operator>
          <value>false</value>
        </condition>
        <action>
          <type>plugin</type>
          <plugin>checkSuspiciousIPs</plugin>
          <input>source_ip</input>
        </action>
      </rule>
    </ruleset>

  # MCP configuration
  mcp_config/config.json: |
    {
      "mcp_servers": {
        "agentsmith-hub": {
          "command": "agentsmith-hub",
          "args": ["--config_root", "/opt/config"],
          "env": {
            "MCP_SERVER_NAME": "agentsmith-hub"
          }
        }
      }
    }
  
  # Plugin configurations
  plugin/checkSuspiciousIPs.go: |
    package main
    
    import (
        "fmt"
        "net"
    )
    
    func CheckSuspiciousIPs(ip string) bool {
        // Example plugin implementation
        return false
    }
    
    func main() {
        fmt.Println("Suspicious IPs plugin loaded")
    }
  
  plugin/pushMsgToDingDing.go: |
    package main
    
    import "fmt"
    
    func PushMsgToDingDing(message string) error {
        // Example plugin implementation
        fmt.Printf("Pushing message to DingDing: %s\n", message)
        return nil
    }
    
    func main() {
        fmt.Println("DingDing plugin loaded")
    }
{{- end }} 