---
# AgentSmith-HUB Unified Kubernetes Deployment
# Single image for both leader and follower modes

# Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: agentsmith-hub
  labels:
    name: agentsmith-hub

---
# Persistent Volume Claim for Leader Config
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: agentsmith-hub-leader-config
  namespace: agentsmith-hub
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: standard  # Adjust based on your cluster

---
# ConfigMap for shared configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: agentsmith-hub-config
  namespace: agentsmith-hub
data:
  # Basic configuration template
  config.yaml: |
    # AgentSmith-HUB Configuration
    # This will be overridden by persistent volume for leader
    
    # Redis configuration (can be overridden by environment variables)
    redis: "agentsmith-hub-redis:6379"
    redis_password: "toor"
    
    # Logging
    logging:
      level: "info"
      file: "/tmp/hub_logs/agentsmith-hub.log"
      max_size: 100
      max_backups: 3
      max_age: 7
    
    # MCP settings
    mcp:
      enabled: true
      config_path: "/opt/mcp_config"


# Redis Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: agentsmith-hub-redis
  namespace: agentsmith-hub
  labels:
    app: agentsmith-hub-redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: agentsmith-hub-redis
  template:
    metadata:
      labels:
        app: agentsmith-hub-redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        env:
        - name: REDIS_PASSWORD
          value: "toor"
        command:
        - sh
        - -c
        - redis-server --requirepass $REDIS_PASSWORD
        volumeMounts:
        - name: redis-data
          mountPath: /data
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      volumes:
      - name: redis-data
        emptyDir: {}

---
# Redis Service
apiVersion: v1
kind: Service
metadata:
  name: agentsmith-hub-redis
  namespace: agentsmith-hub
  labels:
    app: agentsmith-hub-redis
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: 6379
    protocol: TCP
  selector:
    app: agentsmith-hub-redis

---
# Leader Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: agentsmith-hub-leader
  namespace: agentsmith-hub
  labels:
    app: agentsmith-hub-leader
    role: leader
spec:
  replicas: 1
  selector:
    matchLabels:
      app: agentsmith-hub-leader
  template:
    metadata:
      labels:
        app: agentsmith-hub-leader
        role: leader
    spec:
      containers:
      - name: agentsmith-hub
        image: ghcr.io/ebwi11/agentsmith-hub:latest
        imagePullPolicy: Always
        # Use the new docker-entrypoint.sh which will start leader mode based on MODE env var
        ports:
        - containerPort: 8080
          name: backend
        - containerPort: 80
          name: frontend
        env:
        - name: MODE
          value: "leader"
        - name: REDIS_HOST
          value: "agentsmith-hub-redis"
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_PASSWORD
          value: "toor"
        - name: NODE_ID
          value: "leader"
        - name: LOG_LEVEL
          value: "info"
        - name: CONFIG_ROOT
          value: "/opt/config"
        - name: AGENTSMITH_TOKEN
          value: "9ef0c170-069e-44dd-a406-2d85eca0a0b2"
        volumeMounts:
        - name: config
          mountPath: /opt/config
          readOnly: false
        - name: logs
          mountPath: /tmp/hub_logs
        - name: mcp-config
          mountPath: /opt/mcp_config
          readOnly: true
        livenessProbe:
          httpGet:
            path: /ping
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ping
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: agentsmith-hub-leader-config
      - name: logs
        emptyDir: {}
      - name: mcp-config
        configMap:
          name: agentsmith-hub-config
          items:
          - key: config.yaml
            path: mcp_config.json

---
# Leader Service
apiVersion: v1
kind: Service
metadata:
  name: agentsmith-hub-leader
  namespace: agentsmith-hub
  labels:
    app: agentsmith-hub-leader
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: backend
  - port: 80
    targetPort: 80
    protocol: TCP
    name: frontend
  selector:
    app: agentsmith-hub-leader

---
# Follower Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: agentsmith-hub-follower
  namespace: agentsmith-hub
  labels:
    app: agentsmith-hub-follower
    role: follower
spec:
  replicas: 2
  selector:
    matchLabels:
      app: agentsmith-hub-follower
  template:
    metadata:
      labels:
        app: agentsmith-hub-follower
        role: follower
    spec:
      containers:
      - name: agentsmith-hub
        image: ghcr.io/ebwi11/agentsmith-hub:latest
        imagePullPolicy: Always
        # Use the new docker-entrypoint.sh which will start follower mode based on MODE env var
        ports:
        - containerPort: 8080
          name: backend
        env:
        - name: MODE
          value: "follower"
        - name: REDIS_HOST
          value: "agentsmith-hub-redis"
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_PASSWORD
          value: "toor"
        - name: NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: LOG_LEVEL
          value: "info"
        - name: CONFIG_ROOT
          value: "/opt/config"
        - name: AGENTSMITH_TOKEN
          value: "9ef0c170-069e-44dd-a406-2d85eca0a0b2"
        volumeMounts:
        - name: config
          mountPath: /opt/config
          readOnly: false
        - name: logs
          mountPath: /tmp/hub_logs
        - name: mcp-config
          mountPath: /opt/mcp_config
          readOnly: true
        livenessProbe:
          httpGet:
            path: /ping
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ping
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
      volumes:
      - name: config
        configMap:
          name: agentsmith-hub-config
      - name: logs
        emptyDir: {}
      - name: mcp-config
        configMap:
          name: agentsmith-hub-config

---
# Follower Service
apiVersion: v1
kind: Service
metadata:
  name: agentsmith-hub-follower
  namespace: agentsmith-hub
  labels:
    app: agentsmith-hub-follower
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: backend
  selector:
    app: agentsmith-hub-follower

---
# Ingress for external access
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: agentsmith-hub-ingress
  namespace: agentsmith-hub
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: agentsmith-hub.local  # Change this to your domain
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: agentsmith-hub-leader
            port:
              number: 80
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: agentsmith-hub-leader
            port:
              number: 8080
  - host: agentsmith-follower.local  # For follower access
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: agentsmith-hub-follower
            port:
              number: 8080