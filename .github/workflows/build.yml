name: Build and Release AgentSmith-HUB

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  BINARY_NAME: agentsmith-hub

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for git info
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: web/package-lock.json
    
    - name: Install frontend dependencies
      run: |
        cd web
        npm ci
    
    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential
    
    - name: Build project
      run: |
        make all
    
    - name: Get version info
      id: version
      run: |
        VERSION=$(cat VERSION 2>/dev/null | tr -d '\n\r ' || echo "unknown")
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
        # Set release name based on tag or branch
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          RELEASE_NAME=${GITHUB_REF#refs/tags/}
        else
          RELEASE_NAME="${VERSION}-$(date +'%Y%m%d')-$(git rev-parse --short HEAD)"
        fi
        # Remove any spaces and newlines from release name
        RELEASE_NAME=$(echo "$RELEASE_NAME" | tr -d '\n\r ')
        echo "release_name=$RELEASE_NAME" >> $GITHUB_OUTPUT
    
    - name: Create deployment archive
      run: |
        # Create a clean directory structure for the archive
        RELEASE_NAME="${{ steps.version.outputs.release_name }}"
        ARCHIVE_DIR="agentsmith-hub"
        ARCHIVE_NAME="agentsmith-hub.tar.gz"
        
        echo "Creating archive: $ARCHIVE_NAME"
        echo "Archive directory: $ARCHIVE_DIR"
        
        # Create the archive directory and copy all files
        mkdir -p "$ARCHIVE_DIR"
        cp -r dist/* "$ARCHIVE_DIR/"
        
        # Show what we're packaging
        echo "Contents to be archived:"
        ls -la "$ARCHIVE_DIR"
        
        # Create the tar.gz archive with proper directory structure
        tar -czf "$ARCHIVE_NAME" "$ARCHIVE_DIR"
        
        # Create checksum
        sha256sum "$ARCHIVE_NAME" > "${ARCHIVE_NAME}.sha256"
        
        # Clean up
        rm -rf "$ARCHIVE_DIR"
        
        echo "Archive created successfully: $ARCHIVE_NAME"
        ls -la *.tar.gz*
    
    # Note: GitHub Actions will automatically zip the artifacts
    # The actual deployment file is the .tar.gz inside the zip
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: agentsmith-hub-${{ steps.version.outputs.release_name }}
        path: |
          agentsmith-hub.tar.gz
          agentsmith-hub.tar.gz.sha256
        retention-days: 30
    
    - name: Create Release (on tag)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          agentsmith-hub.tar.gz
          agentsmith-hub.tar.gz.sha256
        body: |
          ## AgentSmith-HUB Release ${{ github.ref_name }}
          
          ### What's Included
          
          - Pre-built Linux binary (amd64)
          - Frontend web application
          - Required libraries (librure.so)
          - Configuration templates
          - Start and stop scripts
          - Deployment documentation
          
          ### Quick Start
          
          1. Download and extract the archive:
             ```bash
             tar -xzf agentsmith-hub.tar.gz
             cd agentsmith-hub
             ```
          2. Configure your settings in `config/config.yaml`
          3. Run `./start.sh` to start the application
          4. Access the web interface at http://localhost:8080
          
          ### Version Information
          
          - Version: ${{ steps.version.outputs.version }}
          - Git Commit: ${{ github.sha }}
          - Build Date: $(date -u +'%Y-%m-%d %H:%M:%S UTC')
          
          See README.md in the package for detailed deployment instructions.
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 